#GitHub READ.md
# 마음의 나침반 (The Mindful Compass)

개인 맞춤형 감정 관리 웹 애플리케이션

## 프로젝트 소개

**마음의 나침반**은 20-30대를 위한 개인 맞춤형 감정 관리 플랫폼입니다. 감정 진단, 색깔 달력, 미래 편지, 전문 콘텐츠 추천을 통해 사용자의 감정 이해와 지속적 성장을 지원합니다.

![License](https://img.shields.io/badge/license-MIT-blue.svg)
![Python](https://img.shields.io/badge/python-3.7+-brightgreen.svg)
![Streamlit](https://img.shields.io/badge/streamlit-1.28+-red.svg)

## 주요 기능

### 🎯 감정 탐색 챗봇
- 3-5단계 대화형 감정 분석
- 무기력, 불안 감정 전문 지원
- 개인화된 통찰 및 조언 제공

### 🌈 감정 색깔 달력
- 8가지 감정 유형별 색상 코딩
- 장기적 감정 패턴 시각화
- 월별/일별 감정 통계 분석

### 💌 미래 편지 시스템
- 시간차 자기 소통 도구
- 6가지 배송 일정 옵션
- 개인 성장 동기 부여

### 🎬 전문 콘텐츠 큐레이션
- 써니즈 채널 기반 검증된 콘텐츠
- 감정별 맞춤 추천 시스템
- 심리학/철학 기반 성장 중심 접근

### 📊 감정 분석 대시보드
- 실시간 감정 현황 모니터링
- 개인 성장 지표 추적
- 연속 기록 및 성취 관리

## 기술 스택

- **Frontend**: Streamlit
- **Backend**: Python 3.7+
- **Data Storage**: JSON 파일 시스템
- **Development**: Cursor IDE
- **Deployment**: Streamlit Cloud 호환

## 설치 및 실행

### 사전 요구사항
- Python 3.7 이상
- pip 패키지 관리자

### 로컬 실행
```bash
# 저장소 클론
git clone https://github.com/YOUR_USERNAME/mindful-compass.git
cd mindful-compass

# 의존성 설치
pip install -r requirements.txt

# 애플리케이션 실행
streamlit run app.py
```

애플리케이션이 `http://localhost:8501`에서 실행됩니다.

## 프로젝트 구조

```
mindful-compass/
├── app.py                    # 메인 애플리케이션
├── requirements.txt          # Python 의존성
├── README.md                # 프로젝트 문서
├── data/                    # 정적 데이터
│   ├── insights.json        # 챗봇 통찰 데이터
│   └── contents.json        # 콘텐츠 추천 데이터
├── emotion_calendar.json    # 감정 달력 (자동 생성)
├── future_letters.json      # 편지 데이터 (자동 생성)
└── records.txt              # 감정 기록 로그 (자동 생성)
```

## 주요 의존성

- `streamlit>=1.28.0` - 웹 애플리케이션 프레임워크
- `pandas>=1.5.0` - 데이터 분석 및 처리
- `uuid` - 고유 식별자 생성 (내장 모듈)
- `datetime` - 날짜/시간 처리 (내장 모듈)

## 사용법

1. **감정 탐색**: 홈페이지에서 현재 감정 상태 분석
2. **달력 기록**: 매일의 감정을 색깔로 기록
3. **편지 작성**: 미래의 자신에게 편지 작성
4. **콘텐츠 감상**: 추천된 성장 콘텐츠 시청
5. **통계 확인**: 개인의 감정 패턴 분석

## 개발 로드맵

### v1.1 (단기)
- [ ] 감정별 음악 치료 모듈
- [ ] 호흡 가이드 애니메이션
- [ ] 성취 관리 시스템

### v1.2 (중기)
- [ ] 모바일 앱 버전
- [ ] AI 기반 개인화 강화
- [ ] 커뮤니티 기능

### v2.0 (장기)
- [ ] 전문가 네트워크 연결
- [ ] 기업용 솔루션
- [ ] 다국어 지원

## 기여하기

1. Fork the Project
2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)
3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the Branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## 라이선스

이 프로젝트는 MIT 라이선스 하에 배포됩니다. 자세한 내용은 `LICENSE` 파일을 참조하세요.

## 연락처

프로젝트 관련 문의나 제안사항이 있으시면 Issue를 생성해주세요.

## 감사의 말

- **써니즈(함께 성장)** 채널의 양질의 콘텐츠
- **Streamlit** 팀의 훌륭한 프레임워크
- **Python** 커뮤니티의 지속적인 지원

---

**"기술로 전하는 따뜻한 마음"**

*마음의 나침반과 함께 감정의 나침반을 찾아보세요.*
